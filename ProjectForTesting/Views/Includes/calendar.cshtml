<link href="/content/css/calendar.css" rel="stylesheet" />

<script type="text/javascript">
    "use strict";
    const LEFT_EDGE_DATE = 1920;
    const RANGE_DATE = 100;
    let SELECTED_DATE;
    let LOADED_DATE;
</script>

@{
    var datedisplay = DateTime.Now;
    var monthdisplay = datedisplay.ToString("MMMM");
    var yeardisplay = datedisplay.Year;
    var listMonths = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthGenitiveNames;
    var yearDec = yeardisplay / 10 * 10;
}


<div class="calendar-box">
    <div class="nav-calendar flex-center-between">

        <div class="nav-part-calendar">
            <span class="arrow-calendar" id="arrow-calendar-month-left">
                <svg width="11" height="18" viewBox="0 0 11 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.36914 17L1.36914 9L9.36914 1" stroke="#444F51" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </span>

            <div class="month-calendar">
                <div class="current-month-calendar" id="month-calendar-id" data-month-order=@(datedisplay.Month - 1)>
                    @monthdisplay
                </div>
                <div class="month-calendar-select-wrap">
                    <div class="month-calendar-select">
                        @for (int i = 0; i < 12; i++)
                        {
                            <span class="month-calendar-item @(i + 1 == datedisplay.Month ? "month-calendar-item-active" : "")" data-month-order="@i">@listMonths[i]</span>
                        }
                    </div>
                </div>
            </div>

            <span class="arrow-calendar" id="arrow-calendar-month-right">
                <svg width="11" height="18" viewBox="0 0 11 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.36914 17L9.36914 9L1.36914 1" stroke="#444F51" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </span>
        </div>

        <div class="nav-part-calendar">
            <span class="arrow-calendar" id="arrow-calendar-year-left">
                <svg width="11" height="18" viewBox="0 0 11 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.36914 17L1.36914 9L9.36914 1" stroke="#444F51" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </span>

            <div class="year-calendar">
                <div class="current-year-calendar" id="year-calendar-id">
                    @yeardisplay
                </div>
                <div class="year-calendar-select-wrap">
                    <div class="year-calendar-select">
                        <span class="year-calendar-item year-calendar-previous" id="year-calendar-previous-id">@(yearDec - 10) - @yearDec</span>
                        @for (int i = yearDec; i <= yearDec + 10; i++)
                        {
                            <span class="year-calendar-item year-calendar-center @(i == yeardisplay ? "year-calendar-item-active" : "")">@i</span>
                        }
                        <span class="year-calendar-item year-calendar-next" id="year-calendar-next-id">@(yearDec + 10) - @(yearDec + 20)</span>
                    </div>
                </div>
            </div>

            <span class="arrow-calendar" id="arrow-calendar-year-right">
                <svg width="11" height="18" viewBox="0 0 11 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.36914 17L9.36914 9L1.36914 1" stroke="#444F51" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </span>

        </div>
    </div>

    <div class="days-title">
        <span class="days-title-item">S</span>
        <span class="days-title-item">M</span>
        <span class="days-title-item">T</span>
        <span class="days-title-item">W</span>
        <span class="days-title-item">T</span>
        <span class="days-title-item">F</span>
        <span class="days-title-item">S</span>
    </div>

    <div class="calendar-line"></div>
    <time id="trans-data-to-front" datetime="@datedisplay.ToString("yyyy/MM/dd")" hidden></time>
    <div class="days-items">
        @for (int i = 1; i <= 6; i++)
        {
            <div class="days-items-line">
                @for (int j = 1; j <= 7; j++)
                {
                    <span class="days-item-frame"></span>
                }
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    "use strict";
    $(document).ready(function () {
        const transDateStr = $("#trans-data-to-front").attr("datetime");
        console.log("SERVER: " + transDateStr);
        SELECTED_DATE = new Date(transDateStr);
        LOADED_DATE = new Date(transDateStr);
        console.log("LOADED_DATE: " + SELECTED_DATE);
        updateCalendarUseDate(SELECTED_DATE.getFullYear(), SELECTED_DATE.getMonth(), SELECTED_DATE.getDate());
    });

    $("#arrow-calendar-month-left").click(() => {
        let currentIndex = $(".month-calendar-item").index($(".month-calendar-item-active"));
        $(".month-calendar-item").removeClass("month-calendar-item-active");
        const monthsList = document.getElementsByClassName("month-calendar-item");
        let newindex = currentIndex === 0 ? monthsList.length - 1 : currentIndex - 1;
        if (currentIndex === 0) {
            let currentYear = $("#year-calendar-id").html();
            $("#year-calendar-id").html(+currentYear - 1);
        }
        monthsList.item(newindex).classList.add("month-calendar-item-active");
        $(".current-month-calendar").html(monthsList.item(newindex).innerHTML);
        $("#month-calendar-id").attr("data-month-order", monthsList.item(newindex).getAttribute("data-month-order"));
        updateCalendarUseNav();
    });

    $("#arrow-calendar-month-right").click(() => {
        let currentIndex = $(".month-calendar-item").index($(".month-calendar-item-active"));
        $(".month-calendar-item").removeClass("month-calendar-item-active");
        const monthsList = document.getElementsByClassName("month-calendar-item");
        let newindex = currentIndex === monthsList.length - 1 ? 0 : currentIndex + 1;
        if (currentIndex === monthsList.length - 1) {
            let currentYear = $("#year-calendar-id").html();
            $("#year-calendar-id").html(+currentYear + 1);
        }
        monthsList.item(newindex).classList.add("month-calendar-item-active");
        $(".current-month-calendar").html(monthsList.item(newindex).innerHTML);
        $("#month-calendar-id").attr("data-month-order", monthsList.item(newindex).getAttribute("data-month-order"));
        updateCalendarUseNav();
    });

    $(".month-calendar-item").click(function () {
        $(".month-calendar-select-wrap").hide();
        $(".month-calendar-item").removeClass("month-calendar-item-active");
        $(this).addClass("month-calendar-item-active");
        $("#month-calendar-id").html($(this).html());
        $("#month-calendar-id").attr("data-month-order", $(this).attr("data-month-order"));
        updateCalendarUseNav();
    });

    $("#month-calendar-id").click(() => {
        $(".month-calendar-select-wrap").slideToggle();
    });

    $("#arrow-calendar-year-left").click(() => {
        const currentYear = $("#year-calendar-id").html();
        if (isYearWithRange(currentYear) === false)
            return;
        let currentYearNum = +currentYear;
        updateYearSelect(--currentYearNum);
    });

    $("#arrow-calendar-year-right").click(() => {
        const currentYear = $("#year-calendar-id").html();
        if (isYearWithRange(currentYear) === false)
            return;
        let currentYearNum = +currentYear;
        updateYearSelect(++currentYearNum);
    });

    function updateYearSelect(year, updateCurrentYear = true) {
        if (updateCurrentYear === true) {
            $(".current-year-calendar").html(year);
            updateCalendarUseNav();
        }
        $(".year-calendar-center").removeClass("year-calendar-item-active");

        let yearDec = year - year % 10;

        $(".year-calendar-previous").html(`${yearDec - 10} - ${yearDec}`);
        $(".year-calendar-next").html(`${yearDec + 10} - ${yearDec + 20}`);

        const leftEdge = LEFT_EDGE_DATE - LEFT_EDGE_DATE % 10;
        if (yearDec <= leftEdge) {
            $(".year-calendar-previous").hide();
        } else {
            $(".year-calendar-previous").show();
        }

        const yearNow = new Date().getFullYear();
        const rightEdge = yearNow - yearNow % 10 + RANGE_DATE;

        if (yearDec + 10 >= rightEdge) {
            $(".year-calendar-next").hide();
        } else {
            $(".year-calendar-next").show();
        }

        const yearList = document.getElementsByClassName("year-calendar-center");
        for (let yearIndex = 0; yearIndex < 11; yearIndex++) {
            yearList[yearIndex].innerHTML = yearDec;
            if (yearDec == $(".current-year-calendar").html()) {
                yearList[yearIndex].classList.add("year-calendar-item-active");
            }
            yearDec++;
        }
    }

    function updateCalendarUseNav() {
        const currentMonth = $("#month-calendar-id").attr("data-month-order");
        const currentYear = $("#year-calendar-id").html();
        if (isYearMonthDay(currentYear, currentMonth, 1) === false) {
            return;
        }
        updateCalendarUseDate(+currentYear, +currentMonth, 1);
        $(".days-item-frame").removeClass("active-day-item");
        $(".days-items-line").removeClass("active-days-items-line");
    }

    function updateCalendarUseDate(year, month, day, changeTransDate = false) {
        if (changeTransDate === true) {
            SELECTED_DATE = new Date(year, month, day);
            $("#trans-data-to-front").attr("datetime", `${year}/${month + 1}/${day}`);
            const transDateString = $("#trans-data-to-front").attr("datetime");
            console.log(`DATE: ${transDateString}`);
            console.log(`SELECTED_DATE: ${SELECTED_DATE}`);
        }

        $(".days-items-line").removeClass("active-days-items-line");

        const dateStart = new Date(year, month, 1);
        const days = new Date(year, month + 1, 0).getDate();
        let positionInWeek = dateStart.getDay();

        const daysFrame = document.getElementsByClassName("days-item-frame");
        let dayCount = 1;
        for (let dayIndex = 0; dayIndex < daysFrame.length; dayIndex++) {
            daysFrame[dayIndex].classList.remove("days-item");
            daysFrame[dayIndex].classList.remove("active-day-item");
            daysFrame[dayIndex].classList.remove("days-item");
            daysFrame[dayIndex].textContent = "";

            if (dayIndex >= positionInWeek && dayIndex < days + positionInWeek) {
                daysFrame[dayIndex].classList.add("days-item");
                daysFrame[dayIndex].textContent = dayCount;

                if (dayCount === day) {
                    daysFrame[dayIndex].classList.add("active-day-item");
                    daysFrame[dayIndex].parentElement.classList.add("active-days-items-line");
                }

                dayCount++;
            }
        }
    }

    $(".days-item-frame").click(function () {
        if ($(this).hasClass("days-item") === false) {
            return;
        }
        const day = $(this).text();
        const month = $("#month-calendar-id").attr("data-month-order");
        const year = $("#year-calendar-id").html();
        if (isYearMonthDay(year, month, day) === false)
            return;
        updateCalendarUseDate(+year, +month, +day, true);
    });

    $(".year-calendar-previous").click(() => {
        const currentYear = document.getElementById("year-calendar-previous-id").innerHTML.split(' ').shift();
        if (isYearWithRange(currentYear) === false)
            return;
        updateYearSelect(+currentYear, false);
    });

    $(".year-calendar-next").click(() => {
        const currentYear = document.getElementById("year-calendar-next-id").innerHTML.split(' ').shift();
        if (isYearWithRange(currentYear) === false)
            return;
        updateYearSelect(+currentYear, false);
    });

    $(".year-calendar-center").click(function () {
        $(".year-calendar-select-wrap").hide();
        $(".year-calendar-center").removeClass("year-calendar-item-active");
        $(this).addClass("year-calendar-item-active");
        $("#year-calendar-id").html($(this).html());
        updateYearSelect(+$(this).html());
    });

    $("#year-calendar-id").click(() => {
        $(".year-calendar-select-wrap").slideToggle();
    });

    function isYearWithRange(year, start = LEFT_EDGE_DATE, range = RANGE_DATE) {
        const leftEdge = start - start % 10;
        if (jQuery.isNumeric(year) === false) {
            alert("Invalid year!");
            return false;
        }
        const yearNum = +year;
        if (yearNum < leftEdge) {
            alert(`Invalid year! Year less than ${leftEdge}`);
            return false;
        }

        const yearNow = new Date().getFullYear();
        const rightEdge = yearNow - yearNow % 10 + range;

        if (yearNum >= rightEdge) {
            alert(`Invalid year! Year more than ${rightEdge}`);
            return false;
        }
        return true;
    }

    function isYearMonthDay(year, month, day) {
        if (isYearWithRange(year) === false) {
            return false;
        }

        if (jQuery.isNumeric(month) === false) {
            alert("Invalid month!");
            return false;
        }
        if (jQuery.isNumeric(day) === false) {
            alert("Invalid day!");
            return false;
        }

        const monthNum = +month;
        if (monthNum < 0 || monthNum > 11) {
            alert("Invalid month!");
            return false;
        }

        const dayNum = +day;
        const yaerNum = +year;
        const daysInMonth = new Date(yaerNum, monthNum + 1, 0).getDate();

        if (dayNum < 1 || dayNum > daysInMonth) {
            alert("Invalid day!");
            return false;
        }
        return true;
    }

    $(document).mouseup(function (e) {
        var monthsWrap = $(".month-calendar-select-wrap");
        var yearsWrap = $(".year-calendar-select-wrap");

        var monthsSection = $(".month-calendar");
        var yearsSection = $(".year-calendar");

        if (!monthsSection.is(e.target) && monthsSection.has(e.target).length === 0) {
            monthsWrap.hide();
        }

        if (!yearsSection.is(e.target) && yearsSection.has(e.target).length === 0) {
            yearsWrap.hide();
        }
    });
</script>